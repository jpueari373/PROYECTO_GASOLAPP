// Generated by view binder compiler. Do not edit!
package com.example.gasolapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gasolapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RegistroUsuarioBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button botonRegistrarse;

  @NonNull
  public final Button botonVolver;

  @NonNull
  public final EditText contrasenaRegistro;

  @NonNull
  public final EditText emailRegistro;

  @NonNull
  public final EditText nombreRegistro;

  @NonNull
  public final EditText telefonoRegistro;

  @NonNull
  public final EditText usuarioRegistro;

  private RegistroUsuarioBinding(@NonNull LinearLayout rootView, @NonNull Button botonRegistrarse,
      @NonNull Button botonVolver, @NonNull EditText contrasenaRegistro,
      @NonNull EditText emailRegistro, @NonNull EditText nombreRegistro,
      @NonNull EditText telefonoRegistro, @NonNull EditText usuarioRegistro) {
    this.rootView = rootView;
    this.botonRegistrarse = botonRegistrarse;
    this.botonVolver = botonVolver;
    this.contrasenaRegistro = contrasenaRegistro;
    this.emailRegistro = emailRegistro;
    this.nombreRegistro = nombreRegistro;
    this.telefonoRegistro = telefonoRegistro;
    this.usuarioRegistro = usuarioRegistro;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RegistroUsuarioBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RegistroUsuarioBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.registro_usuario, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RegistroUsuarioBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.boton_registrarse;
      Button botonRegistrarse = ViewBindings.findChildViewById(rootView, id);
      if (botonRegistrarse == null) {
        break missingId;
      }

      id = R.id.boton_volver;
      Button botonVolver = ViewBindings.findChildViewById(rootView, id);
      if (botonVolver == null) {
        break missingId;
      }

      id = R.id.contrasenaRegistro;
      EditText contrasenaRegistro = ViewBindings.findChildViewById(rootView, id);
      if (contrasenaRegistro == null) {
        break missingId;
      }

      id = R.id.emailRegistro;
      EditText emailRegistro = ViewBindings.findChildViewById(rootView, id);
      if (emailRegistro == null) {
        break missingId;
      }

      id = R.id.nombreRegistro;
      EditText nombreRegistro = ViewBindings.findChildViewById(rootView, id);
      if (nombreRegistro == null) {
        break missingId;
      }

      id = R.id.telefonoRegistro;
      EditText telefonoRegistro = ViewBindings.findChildViewById(rootView, id);
      if (telefonoRegistro == null) {
        break missingId;
      }

      id = R.id.usuarioRegistro;
      EditText usuarioRegistro = ViewBindings.findChildViewById(rootView, id);
      if (usuarioRegistro == null) {
        break missingId;
      }

      return new RegistroUsuarioBinding((LinearLayout) rootView, botonRegistrarse, botonVolver,
          contrasenaRegistro, emailRegistro, nombreRegistro, telefonoRegistro, usuarioRegistro);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
